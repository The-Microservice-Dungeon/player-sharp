<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>https://localhost:44467</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="11.0.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="KafkaFlow" Version="2.3.0-beta.1" />
        <PackageReference Include="KafkaFlow.LogHandler.Console" Version="2.3.0-beta.1" />
        <PackageReference Include="KafkaFlow.LogHandler.Microsoft" Version="2.2.4" />
        <PackageReference Include="KafkaFlow.Microsoft.DependencyInjection" Version="2.3.0-beta.1" />
        <PackageReference Include="KafkaFlow.Serializer" Version="2.3.0-beta.1" />
        <PackageReference Include="KafkaFlow.Serializer.JsonCore" Version="2.2.4" />
        <PackageReference Include="KafkaFlow.TypedHandler" Version="2.3.0-beta.1" />
        <PackageReference Include="Macross.Json.Extensions" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.2" />
        <PackageReference Include="Refit.HttpClientFactory" Version="6.3.2" />
        <PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\package-lock.json" />
        <Content Include="ClientApp\package.json" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Update="ClientApp\.env.production.development">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>.env.local.Designer.cs</LastGenOutput>
        </None>
        <None Include="ClientApp\.prettierrc.json" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Sharp.Client\Sharp.Client.csproj" />
        <ProjectReference Include="..\Sharp.Core\Sharp.Core.csproj" />
        <ProjectReference Include="..\Sharp.Data\Sharp.Data.csproj" />
        <ProjectReference Include="..\Sharp.Gameplay\Sharp.Gameplay.csproj" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="ClientApp\.env.local">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>.env.local.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <Folder Include="ClientApp\src\components" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm ci" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm ci" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
